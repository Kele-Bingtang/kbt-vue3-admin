@use "namespace" as namespace;
@use "element-plus/theme-chalk/src/mixins/config.scss" as config;
@use "sass:meta";
@use "sass:string";

// BEM support Func
@function selectorToString($selector) {
  /* 转为字符串 */
  $selector: meta.inspect($selector);
  $selector: string.slice($selector, 2, -2);
  @return $selector;
}

/* 是否包含 modifier-separator（--） */
@function containsModifier($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, config.$modifier-separator) {
    @return true;
  } @else {
    @return false;
  }
}

/* 是否包含 state-prefix（.is） */
@function containWhenFlag($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, "." + config.$state-prefix) {
    @return true;
  } @else {
    @return false;
  }
}

/* 是否包含伪类（:） */
@function containPseudoClass($selector) {
  $selector: selectorToString($selector);

  @if string.index($selector, ":") {
    @return true;
  } @else {
    @return false;
  }
}

/* 是否包含特殊嵌套规则 */
@function hitAllSpecialNestRule($selector) {
  @return containsModifier($selector) or containWhenFlag($selector) or containPseudoClass($selector);
}

/* 合并变量名：joinVarName(('button', 'text-color')) => '--tk-button-text-color' */
@function joinVarName($list) {
  $name: "--" + namespace.$admin-namespace;
  @each $item in $list {
    @if $item != "" {
      $name: $name + "-" + $item;
    }
  }
  @return $name;
}

/* getCssVarName('button', 'text-color') => '--tk-button-text-color' */
@function getCssVarName($args...) {
  @return joinVarName($args);
}

/* getCssVar('button', 'text-color') => var(--tk-button-text-color) */
@function getCssVar($args...) {
  @return var(#{joinVarName($args)});
}

/* getCssVarWithDefault(('button', 'text-color'), red) => var(--tk-button-text-color, red) */
@function getCssVarWithDefault($args, $default) {
  @return var(#{joinVarName($args)}, #{$default});
}

/* bem('block', 'element', 'modifier') => 'tk-block__element--modifier' */
@function bem($block, $element: "", $modifier: "") {
  $name: namespace.$admin-namespace + config.$common-separator + $block;

  @if $element != "" {
    $name: $name + config.$element-separator + $element;
  }

  @if $modifier != "" {
    $name: $name + config.$modifier-separator + $modifier;
  }

  @return $name;
}
