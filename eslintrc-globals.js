export default {
  Component: "readonly",
  ComponentPublicInstance: "readonly",
  ComputedRef: "readonly",
  EffectScope: "readonly",
  InjectionKey: "readonly",
  PropType: "readonly",
  Ref: "readonly",
  VNode: "readonly",
  computed: "readonly",
  createApp: "readonly",
  customRef: "readonly",
  defineAsyncComponent: "readonly",
  defineComponent: "readonly",
  effectScope: "readonly",
  getCurrentInstance: "readonly",
  getCurrentScope: "readonly",
  h: "readonly",
  inject: "readonly",
  isProxy: "readonly",
  isReactive: "readonly",
  isReadonly: "readonly",
  isRef: "readonly",
  markRaw: "readonly",
  nextTick: "readonly",
  onActivated: "readonly",
  onBeforeMount: "readonly",
  onBeforeRouteLeave: "readonly",
  onBeforeRouteUpdate: "readonly",
  onBeforeUnmount: "readonly",
  onBeforeUpdate: "readonly",
  onDeactivated: "readonly",
  onErrorCaptured: "readonly",
  onMounted: "readonly",
  onRenderTracked: "readonly",
  onRenderTriggered: "readonly",
  onScopeDispose: "readonly",
  onServerPrefetch: "readonly",
  onUnmounted: "readonly",
  onUpdated: "readonly",
  provide: "readonly",
  reactive: "readonly",
  readonly: "readonly",
  ref: "readonly",
  resolveComponent: "readonly",
  shallowReactive: "readonly",
  shallowReadonly: "readonly",
  shallowRef: "readonly",
  toRaw: "readonly",
  toRef: "readonly",
  toRefs: "readonly",
  triggerRef: "readonly",
  unref: "readonly",
  useAttrs: "readonly",
  useCssModule: "readonly",
  useCssVars: "readonly",
  useLink: "readonly",
  useRoute: "readonly",
  useRouter: "readonly",
  useSlots: "readonly",
  watch: "readonly",
  watchEffect: "readonly",
  watchPostEffect: "readonly",
  watchSyncEffect: "readonly",
  MetaProp: "readonly",
  RouterConfig: "readonly",
  RouterConfigRaw: "readonly",
  process: "readonly",
  BlobPart: "readonly",
  ReadOnlyKey: "readonly",
  PartialKey: "readonly",
  RequiredKey: "readonly",
  RequiredKeyPartialOther: "readonly",
  Recordable: "readonly",
  Nullable: "readonly",
  keyLowercase: "readonly",
  CanvasTextBaseline: "readonly",
  keyUppercase: "readonly",
  keyOnPrefix: "readonly",
  NodeJS: "readonly",
  module: "readonly",
  ImportMetaEnv: "readonly",
  __dirname: "readonly",
  NodeListOf: "readonly",
  AppInfo: "readonly",
  __APP_INFO__: "readonly",
  http: "readonly",
  ExtractPropTypes: "readonly",
  log: "readonly",
};
